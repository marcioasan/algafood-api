#9.11. Customizando e resolvendo mensagens de validacao globais em Resource Bundle - 1', 11'50", 12'40"
#NotBlank.restaurante.nome=Nome do restaurante é obrigatório
#NotBlank.cozinha.nome=Nome da cozinha é obrigatório
#NotBlank={0} é obrigatório
#NotBlank.nome=Informe um nome, porque é obrigatório
#nome=Nome
#restaurante.nome=Nome do restaurante

#9.12. Desafio: customizando mensagens de validação
NotBlank={0} é obrigatório
NotNull={0} é obrigatório
PositiveOrZero={0} deve ser um valor maior ou igual a zero
Multiplo={0} deve ser valor múltiplo de {1}

#9.18. Ajustando Exception Handler para adicionar mensagens de validação em nível de classe - 8'50"
ValorZeroIncluiDescricao={1} deve conter {2}


TaxaFrete.invalida= {0} está inválida

#9.14. Usando o Resource Bundle do Spring como Resource Bundle do Bean Validation
#9.13. Resolvendo mensagens de validação com Resource Bundle do Bean Validation
#javax.validation.constraints.PositiveOrZero.message=Deve ser maior que zero
#TaxaFrete.invalida=Taxa frete está inválida, informe um valor positivo.

# Cozinha
cozinha.nome=Nome da cozinha
cozinha.id=Código da cozinha

# Restaurante
#11.18. Revisando e ajustando as mensagens de validacaoo com o uso de DTOs - mudar de restaurante pra restauranteInput
NotNull.restauranteInput.taxaFrete={0} é obrigatória
NotNull.restauranteInput.cozinha={0} é obrigatória
restauranteInput.nome=Nome do restaurante
restauranteInput.cozinha=Cozinha do restaurante
restauranteInput.taxaFrete=Taxa de frete do restaurante

# Estado
estado.nome=Nome do estado
estado.id=Código do estado

# Cidade
cidade.nome=Nome da cidade
cidade.estado=Estado da cidade