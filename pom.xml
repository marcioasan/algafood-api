<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.7.1-SNAPSHOT</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.algaworks</groupId>
	<artifactId>algafood-api</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>algafood-api</name>
	<description>API de delivery de comida</description>
	<properties>
		<java.version>11</java.version>
		<modelmapper.version>2.3.0</modelmapper.version> <!--11.14. Adicionando e usando o ModelMapper - 2'50"  -->
		<squiggly.version>1.3.18</squiggly.version>
		<jasperreports.version>6.16.0</jasperreports.version> <!--OBS: só funcionou com essa versão. 13.20. Preenchendo um relatório JasperReports com JavaBeans e gerando bytes do PDF - 1'20"  -->
		<aws-java-sdk-s3.version>1.11.671</aws-java-sdk-s3.version>
		<logback-ext-loggly.version>0.1.5</logback-ext-loggly.version> <!--21.4. Configurando o appender do Loggly no Logback  -->
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	    <dependency>
	    	<groupId>mysql</groupId>
	    	<artifactId>mysql-connector-java</artifactId>
	    	<scope>runtime</scope>
	    </dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
	    <!--4.13. Implementando content negotiation para retornar JSON ou XML - 3'40"  -->
	    <!--Essa anotação foi removida na aula 4.29. Desafio: modelando e implementando a consulta de recursos de restaurantes, mas eu mantive  -->
	    <dependency>
	    	<groupId>com.fasterxml.jackson.dataformat</groupId>
	    	<artifactId>jackson-dataformat-xml</artifactId>
	    </dependency>
	    <!--7.6. Adicionando o Flyway no projeto e criando a primeira migracao - 2'  -->
		<dependency>
			<groupId>org.flywaydb</groupId>
			<artifactId>flyway-core</artifactId>
		</dependency>
		<!--https://app.algaworks.com/aulas/1913/adicionando-o-flyway-no-projeto-e-criando-a-primeira-migracao?pagina=0  -->
		<dependency>
		  <groupId>org.flywaydb</groupId>
		  <artifactId>flyway-mysql</artifactId>
		</dependency>
		<!-- //8.21. Tratando a exception InvalidFormatException na desserialização - 3' -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!--9.1. Validação do modelo com Bean Validation -->		
		<dependency>
		    <groupId>org.springframework.boot</groupId> 
		    <artifactId>spring-boot-starter-validation</artifactId> 
		</dependency>
		<!--10.8. Implementando Testes de API com REST Assured e validando o código de status HTTP - 2'30" só usa no momento de testes, não vai para produção  -->
	    <dependency>
	    	<groupId>io.rest-assured</groupId>
	    	<artifactId>rest-assured</artifactId>
	    	<scope>test</scope>
	    </dependency>
	    <!--11.14. Adicionando e usando o ModelMapper 1'40" -->
		<dependency>
		  <groupId>org.modelmapper</groupId>
		  <artifactId>modelmapper</artifactId>
		  <version>${modelmapper.version}</version>
		</dependency>
		<!--13.3. Limitando os campos retornados pela API com Squiggly - 1'  -->
		<dependency>
		    <groupId>com.github.bohnman</groupId>
		    <artifactId>squiggly-filter-jackson</artifactId>
		    <version>${squiggly.version}</version>
		</dependency>
		<!--13.20. Preenchendo um relatório JasperReports com JavaBeans e gerando bytes do PDF - 1'20", 2'20"  -->
		<dependency>
		  <groupId>net.sf.jasperreports</groupId>
		  <artifactId>jasperreports</artifactId>
		  <version>${jasperreports.version}</version>
		</dependency>
		<dependency>
		  <groupId>net.sf.jasperreports</groupId>
		  <artifactId>jasperreports-functions</artifactId>
		  <version>${jasperreports.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>
		<!--14.21. Adicionando o SDK Java da Amazon S3 no projeto e criando classe do servico de storage -->
		<dependency>
		    <groupId>com.amazonaws</groupId>
		    <artifactId>aws-java-sdk-s3</artifactId>
		    <version>${aws-java-sdk-s3.version}</version>
		</dependency>
		<!--15.2. Configurando o projeto para envio de e-mails usando servidor SMTP  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>
		<!--19.3. Adicionando o Spring HATEOAS no projeto  -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>		
		<!-- 21.4. Configurando o appender do Loggly no Logback -->
		<dependency>
			<groupId>org.logback-extensions</groupId>
			<artifactId>logback-ext-loggly</artifactId>
			<version>${logback-ext-loggly.version}</version>
		</dependency>		
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>			
			<plugin><!-- 10.7. Configurando Maven Failsafe Plugin no projeto -->
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>https://repo.spring.io/milestone</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>spring-snapshots</id>
			<name>Spring Snapshots</name>
			<url>https://repo.spring.io/snapshot</url>
			<releases>
				<enabled>false</enabled>
			</releases>
		</pluginRepository>
	</pluginRepositories>

</project>
